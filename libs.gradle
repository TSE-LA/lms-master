project.ext {
  def commonsLangVersion = '3.9'
  def jacksonVersion = '2.10.0'
  def javaxVersion = '1'
  def jsonVersion = '20180813'
  def junit5Version = '5.3.2'
  def okHttpVersion = '3.12.0'
  def poiVersion = '3.15'
  def slf4jVersion = '1.7.5'
  def springVersion = '5.2.0.RELEASE'
  def springDataMongoVersion = '2.1.10.RELEASE'
  def ldapVersion = '2.3.2.RELEASE'
  def logbackVersion = '1.2.3'
  def mockitoVersion = '2.18.0'
  def swaggerV1Version = '1.5.22'
  def swaggerVersion = '2.9.2'
  def resteasyVersion = '3.5.1.Final'
  def seleniumVersion = '3.14.0'
  def arquillianVersion = '1.4.1.Final'
  def arquillianDroneVersion = '2.5.1'
  def arquillianGrapheneVersion = '2.3.2'
  def arquillianRecorderVersion = '1.1.6.Final'
  def tomcatVersion = '8.5.20'
  def shiroVersion = '1.4.1'
  def gsonVersion = '2.8.1'
  def hibernateValidatorVersion = '5.4.1.Final'
  def springBootVersion = '2.1.0.RELEASE'

  lib = [

    // ERIN
    erin              : [
        domain_base         : "mn.erin.domain:erin-domain-base:1.0.0",
        dms_alfresco        : "mn.erin.dms:erin-alfresco-connector:1.1.0",
        common              : "mn.erin.common:erin-common-base:1.0.1"
    ],

    // Apache
    commons           : [
      lang       : "org.apache.commons:commons-lang3:${commonsLangVersion}",
      collections: "commons-collections:commons-collections:3.2.2",
      fileupload : "commons-fileupload:commons-fileupload:1.3.1"
    ],

    // Shiro
    shiro             : [
          core  : "org.apache.shiro:shiro-core:${shiroVersion}",
          web   : "org.apache.shiro:shiro-web:${shiroVersion}",
          spring: "org.apache.shiro:shiro-spring:${shiroVersion}"
      ],

      poi             : [
          core : "org.apache.poi:poi:${poiVersion}",
          ooxml: "org.apache.poi:poi-ooxml:${poiVersion}",
          docx: "fr.opensagres.xdocreport:org.apache.poi.xwpf.converter.pdf:1.0.6"
      ],

      // Logging
      slf4j                     : "org.slf4j:slf4j-api:${slf4jVersion}",
      slf4j_nop                 : "org.slf4j:slf4j-nop:${slf4jVersion}",
      slf4j_simple              : "org.slf4j:slf4j-simple:${slf4jVersion}",

      logback_classic           : "ch.qos.logback:logback-classic:${logbackVersion}",

      // Spring
      spring                    : [
          mvc     : "org.springframework:spring-webmvc:${springVersion}",
          servlet : "org.springframework:web-servlet-mvc:${springVersion}",
          web     : "org.springframework:spring-web:${springVersion}",
          context : "org.springframework:spring-context:${springVersion}",
          test    : "org.springframework:spring-test:${springVersion}",
          security: "org.springframework.security:spring-security-core:${springVersion}"
      ],
      springBoot                : [
          starter: "org.springframework.boot:spring-boot-starter:${springBootVersion}",
          web    : "org.springframework.boot:spring-boot-starter-web:${springBootVersion}",
          rest   : "org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}",
          test   : "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
          core   : "org.springframework.session:spring-session-core:${springBootVersion}",
          db     : "org.springframework.data:spring-data-mongodb:${springBootVersion}"
      ],

      springData                : [
          mongo: "org.springframework.data:spring-data-mongodb:${springDataMongoVersion}"
      ],

      spring_ldap               : "org.springframework.ldap:spring-ldap-core:${ldapVersion}",

      hibernate: [
          validator: "org.hibernate:hibernate-validator:${hibernateValidatorVersion}"
      ],

      // JUnit
      junit                     : [
          dependencies.create('junit:junit:4.12') { transitive = false },
          dependencies.create('org.hamcrest:hamcrest-all:1.3') { transitive = false },
          dependencies.create('pl.pragmatists:JUnitParams:1.0.5') { transitive = false }
      ],

      junit5                    : "org.junit.jupiter:junit-jupiter-api:${junit5Version}",

      mockito                   : "org.mockito:mockito-core:${mockitoVersion}",

      // Others
      json                      : [
          org: "org.json:json:${jsonVersion}",
          googlecode: "com.googlecode.json-simple:json-simple:1.1"
      ],

      okHttp3                   : "com.squareup.okhttp3:okhttp:${okHttpVersion}",
      retrofit2                 : 'com.squareup.retrofit2:retrofit:2.6.0',
      adapter_rxjava            : 'com.squareup.retrofit2:adapter-rxjava:2.6.0',
      converter_gson            : 'com.squareup.retrofit2:converter-gson:2.6.0',
      rxjava                    : 'io.reactivex:rxjava:1.3.8',
      logging_interceptor       : 'com.squareup.okhttp3:logging-interceptor:3.4.1',
      alfresco_open_cmis        : 'org.alfresco.cmis.client:alfresco_opencmis_extension:1.1',

      javax                     : [
          annotation_api: "javax.annotation:javax.annotation-api:1.3.2",
          inject : "javax.inject:javax.inject:${javaxVersion}",
          servlet: "javax.servlet:javax.servlet-api:3.1.0"
      ],

      jackson                   : [
          databind: "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}",
          core    : "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
      ],

      jaxrs                     : [
          dependencies.create("org.jboss.resteasy:resteasy-jaxrs:${resteasyVersion}"),
          "org.jboss.spec.javax.ws.rs:jboss-jaxrs-api_2.1_spec:1.0.0.Final",
      ],

      arquillian                : [
          "org.jboss.arquillian.core:arquillian-core-api:${arquillianVersion}",
          "org.jboss.arquillian.core:arquillian-core-impl-base:${arquillianVersion}",
          "org.jboss.arquillian.junit:arquillian-junit-container:${arquillianVersion}",
          "org.jboss.arquillian.protocol:arquillian-protocol-servlet:${arquillianVersion}"
      ],

      arquillian_drone          : [
          "org.jboss.arquillian.extension:arquillian-drone-impl:${arquillianDroneVersion}",
          "org.jboss.arquillian.extension:arquillian-drone-api:${arquillianDroneVersion}",
          "org.jboss.arquillian.extension:arquillian-drone-webdriver:${arquillianDroneVersion}",
          "org.jboss.arquillian.graphene:graphene-webdriver-impl:${arquillianGrapheneVersion}",
          "org.jboss.arquillian.graphene:graphene-webdriver-api:${arquillianGrapheneVersion}"
      ],

      arquillian_container_spi  : "org.jboss.arquillian.container:arquillian-container-spi:${arquillianVersion}",

      arquillian_recorder       : [
          'org.eclipse.persistence:org.eclipse.persistence.asm:2.6.2',
          'org.eclipse.persistence:org.eclipse.persistence.core:2.6.2',
          'org.eclipse.persistence:org.eclipse.persistence.antlr:2.6.2',
          'org.eclipse.persistence:org.eclipse.persistence.moxy:2.6.2',
          "org.jboss.arquillian.test:arquillian-test-impl-base:${arquillianVersion}",
          dependencies.create("org.arquillian.extension:arquillian-recorder-reporter-api:${arquillianRecorderVersion}") { transitive = false },
          dependencies.create("org.arquillian.extension:arquillian-recorder-api:${arquillianRecorderVersion}") { transitive = false },
          dependencies.create("org.arquillian.extension:arquillian-recorder-screenshooter-api:${arquillianRecorderVersion}") { transitive = false },
          dependencies.create("org.arquillian.extension:arquillian-recorder-reporter-impl:${arquillianRecorderVersion}") { transitive = false },
          dependencies.create("org.arquillian.extension:arquillian-recorder-screenshooter-impl-base:${arquillianRecorderVersion}") { transitive = false },
          dependencies.create("org.jboss.arquillian.graphene:arquillian-browser-screenshooter:${arquillianGrapheneVersion}") { transitive = false },
          dependencies.create("javax.validation:validation-api:2.0.1.Final") { transitive = false },
      ],

      arquillian_spring         : [
          dependencies.create("org.jboss.arquillian.extension:arquillian-service-integration-spring:1.0.0.Beta3") { transitive = false },
          dependencies.create("org.jboss.arquillian.extension:arquillian-service-integration-spring-inject:1.0.0.Beta3") { transitive = false },
      ],

      arquillian_tomcat_embedded: "org.jboss.arquillian.container:arquillian-tomcat-embedded-8:1.0.1.Final",

      tomcat_embedded           : [
          "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
          "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}",
          "org.apache.tomcat.embed:tomcat-embed-logging-juli:8.5.2",
          "org.apache.tomcat:tomcat-jdbc:${tomcatVersion}"
      ],

      selenium                  : [
          "org.seleniumhq.selenium:selenium-server:${seleniumVersion}",
          "org.seleniumhq.selenium:selenium-java:${seleniumVersion}",
          "org.seleniumhq.selenium:selenium-support:${seleniumVersion}",
          "org.seleniumhq.selenium:selenium-chrome-driver:${seleniumVersion}",
          "org.seleniumhq.selenium:selenium-firefox-driver:${seleniumVersion}",
          "org.seleniumhq.selenium:selenium-ie-driver:${seleniumVersion}",
          "org.seleniumhq.selenium:selenium-edge-driver:${seleniumVersion}",
          "org.seleniumhq.selenium:selenium-safari-driver:${seleniumVersion}",
          "com.codeborne:phantomjsdriver:1.4.4"
      ],

      // Google
      google          : [
          gson: "com.google.code.gson:gson:${gsonVersion}",
      ],

    swagger: [
      annotations: "io.swagger:swagger-annotations:${swaggerV1Version}",
      springfox: "io.springfox:springfox-swagger2:${swaggerVersion}",
      ui       : "io.springfox:springfox-swagger-ui:${swaggerVersion}"
    ],

    "org.json" : "org.json:json:${jsonVersion}",
      "json-simple" : "com.googlecode.json-simple:json-simple:1.1"
  ]
}
